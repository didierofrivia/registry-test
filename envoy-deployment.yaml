apiVersion: apps/v1
kind: Deployment
metadata:
  name: envoy
  labels:
    app: registry-test
    svc: envoy
spec:
  selector:
    matchLabels:
      app: registry-test
      svc: envoy
  template:
    metadata:
      labels:
        app: registry-test
        svc: envoy
    spec:
      containers:
        - name: envoy
          image: envoyproxy/envoy:v1.17-latest
          command: ["/usr/local/bin/envoy"]
          args:
            - --config-path /usr/local/etc/envoy/envoy.yaml
            - --service-cluster front-proxy
            - --log-level info
            - --component-log-level filter:trace,http:debug,router:debug
          ports:
            - name: web
              containerPort: 8000
            - name: admin
              containerPort: 8001
          volumeMounts:
            - name: config
              mountPath: /usr/local/etc/envoy
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: envoy
            items:
              - key: envoy.yaml
                path: envoy.yaml
  replicas: 1
---
apiVersion: v1
kind: Service
metadata:
  name: envoy
  labels:
    app: registry-test
spec:
  selector:
    app: registry-test
    svc: envoy
  ports:
    - name: web
      port: 8000
      protocol: TCP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-registry-test
spec:
  rules:
    - host: "registry-test.127.0.0.1.nip.io"
    - host: "*.ngrok.io"
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: envoy
                port:
                  number: 8000

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy
  labels:
    app: registry-test
data:
  envoy.yaml: |
    static_resources:
      listeners:
      - address:
          socket_address:
            address: 0.0.0.0
            port_value: 8000
        filter_chains:
        - filters:
          - name: envoy.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: local
              route_config:
                name: local_route
                virtual_hosts:
                - name: local_service
                  domains: ['*']
                  typed_per_filter_config:
                    envoy.filters.http.ext_authz:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                      check_settings:
                        context_extensions:
                          virtual_host: local_service
                  routes:
                  - match:
                      prefix: "/direct"
                    direct_response:
                      status: 200
                      body:
                        inline_string: 'direct'
                  - match: { prefix: / }
                    route:
                      cluster: registry-test
                  cors:
                    allow_origin_string_match:
                    - prefix: "*"
                    allow_methods: GET, PUT, DELETE, POST, OPTIONS
                    allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-api-key,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                    max_age: "1728000"
                    expose_headers: x-api-key,grpc-status,grpc-message
              http_filters:
              - name: envoy.filters.http.cors
              - name: envoy.filters.http.router
                typed_config: {}
              use_remote_address: true
      clusters:
      - name: registry-test
        connect_timeout: 0.25s
        type: strict_dns
        lb_policy: round_robin
        load_assignment:
          cluster_name: registry-test
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: registry-test
                    port_value: 8080
    admin:
      access_log_path: "/tmp/admin_access.log"
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8001
